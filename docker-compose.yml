version: "3.8"

services:
    # This section of the Docker Compose file is defining a service called `client_frontend`.
    client_frontend:
        container_name: eduhub_frontend_vue
        build:
            context: ./client
            dockerfile: client.Dockerfile
        ports:
            - "8080:8080"
        profiles: ["production"]
        depends_on:
            eduhub_db:
                condition: service_healthy
        networks:
            - eduhub_network

    # The `server_backend` section in the Docker Compose file is defining a service called `server_backend`.
    server_backend:
        container_name: eduhub_backend_flask
        build:
            context: ./server
            dockerfile: server.Dockerfile
        command: sh -c "uvicorn main:app --reload --port=5101 --host=0.0.0.0"
        volumes:
            - ./server:/app
        ports:
            - "5101:5101"
        profiles: ["test", "production"]
        networks:
            - eduhub_network
        environment:
            - HOSTNAME=server_backend
        depends_on:
            test_eduhub_db:
                condition: service_healthy


    # The `eduhub_db` section in the Docker Compose file is defining a service for a MySQL database container.
    eduhub_db:
        container_name: eduhub_db_mysql
        image: mysql:8.0
        restart: always
        ports:
            - "5100:3306"
        profiles: ["production"]
        networks:
            - eduhub_network
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - ./data:/docker-entrypoint-initdb.d
            - mysql-data:/var/lib/mysql
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-uroot",
                    "-ppass",
                ]
            interval: 5s
            timeout: 5s
            retries: 20

    # The `phpmyadmin` section in the Docker Compose file is defining a service for a phpMyAdmin container.
    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin
        restart: always
        ports:
            - "8081:80"
        profiles: ["production"]
        networks:
            - eduhub_network
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: ${PHPADMIN_HOST}
            PMA_USER: root
            PMA_PASSWORD: root
        depends_on:
            eduhub_db:
                condition: service_healthy

    # The `test_eduhub_db` section in the Docker Compose file is defining a service for a testing MySQL database container.
    test_eduhub_db:
        container_name: test_eduhub_db
        image: mysql:8.0
        restart: always
        ports:
            - "5100:3306"
        profiles: ["test"]
        networks:
            - eduhub_network
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - ./data:/docker-entrypoint-initdb.d
            - mysql-data:/var/lib/mysql
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-uroot",
                    "-ppass",
                ]
            interval: 5s
            timeout: 5s
            retries: 20

    # tests:
    #     build: 
    #         context: ./server
    #         dockerfile: test.Dockerfile
    #     volumes: 
    #         - ./server:/app
    #     profiles: ["test"]
    #     environment:
    #         MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    #         MYSQL_DATABASE: ${MYSQL_DATABASE}
    #         MYSQL_USER: ${MYSQL_USER}
    #         MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    #     depends_on: 
    #         test_eduhub_db:
    #             condition: service_healthy
    #     networks:
    #         - eduhub_network
    
    # The `volumes` section in the Docker Compose file is defining a named volume called `mysql_data`.
volumes:
    mysql-data:

# The `networks` section in the Docker Compose file is defining a network called `eduhub_network` with the driver set to `bridge`.
networks:
    eduhub_network:
        driver: bridge